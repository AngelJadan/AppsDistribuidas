<?xml version="1.0" encoding="UTF-8"?>
<!-- JBoss, Home of Professional Open Source Copyright 2015, Red Hat, Inc. 
	and/or its affiliates, and individual contributors by the @authors tag. See 
	the copyright.txt in the distribution for a full listing of individual contributors. 
	Licensed under the Apache License, Version 2.0 (the "License"); you may not 
	use this file except in compliance with the License. You may obtain a copy 
	of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
	by applicable law or agreed to in writing, software distributed under the 
	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
	OF ANY KIND, either express or implied. See the License for the specific 
	language governing permissions and limitations under the License. -->
<persistence version="2.2"
	xmlns="http://xmlns.jcp.org/xml/ns/persistence"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
        http://xmlns.jcp.org/xml/ns/persistence
        http://xmlns.jcp.org/xml/ns/persistence/persistence_2_2.xsd">
<<<<<<< HEAD
   <persistence-unit name="sistemafinancieroPersistenceUnit">
      <!-- If you are running in a production environment, add a managed
         data source, this configuration uses the JakartaEE default data source is just for development and testing! -->
      <jta-data-source>java:jboss/datasources/sistemaDS</jta-data-source>
      <properties>
         <!--The database schema is auto created on deployment and dropped before redeploy.
             Note: the following configuration does not drop the tables on undeploy. If you prefer this, use this
             Hibernate property instead:
             <property name="hibernate.hbm2ddl.auto" value="create-drop" />
         -->
<<<<<<< HEAD
         <property name="javax.persistence.schema-generation.database.action" value="update"/>
=======
         <property name="javax.persistence.schema-generation.database.action" value="create-drop"/>
>>>>>>> bd3397e6baa78f2c8fc2e67463b70f5ca08fa57a
         <property name="javax.persistence.schema-generation.create-source" value="metadata"/>
         <property name="javax.persistence.schema-generation.drop-source" value="metadata"/>

         <!-- Properties for Hibernate -->
         <property name="hibernate.dialect" value="org.hibernate.dialect.PostgreSQL95Dialect" />
         <property name="hibernate.show_sql" value="true" /> <!-- Show SQL in console -->
         <property name="hibernate.format_sql" value="true" /> <!-- Show SQL Code in console -->
		 <property name="hibernate.temp.use_jdbc_metadata_defaults" value="false" />
      </properties>
   </persistence-unit>
=======
	<persistence-unit
		name="sistemafinancieroPersistenceUnit">
		<!-- If you are running in a production environment, add a managed data 
			source, this configuration uses the JakartaEE default data source is just 
			for development and testing! -->
		<!-- jta-data-source, revisar el datasource del wifly -->
		<jta-data-source>java:jboss/datasources/sistemaDS</jta-data-source>
		<properties>
			<!--The database schema is auto created on deployment and dropped before 
				redeploy. Note: the following configuration does not drop the tables on undeploy. 
				If you prefer this, use this Hibernate property instead: <property name="hibernate.hbm2ddl.auto" 
				value="create-drop" /> -->
			<property
				name="javax.persistence.schema-generation.database.action"
				value="drop-and-create" />
			<property
				name="javax.persistence.schema-generation.create-source"
				value="metadata" />
			<property
				name="javax.persistence.schema-generation.drop-source"
				value="metadata" />

			<!-- Properties for Hibernate -->
			<property name="javax.persistence.jdbc.url"
				value="database-1.cz1w1mys8xtn.us-east-1.rds.amazonaws.com:5432/apps_dis" />
			<property name="connection.username" value="andres" />
			<property name="javax.persistence.jdbc.password"
				value="Cuenca1234." />
			<property name="javax.persistence.jdbc.driver"
				value="org.postgresql.Driver" />
			<property name="hibernate.show_sql" value="true" /> <!-- Show SQL in console -->
		</properties>
	</persistence-unit>
>>>>>>> AngelJadan
</persistence>
